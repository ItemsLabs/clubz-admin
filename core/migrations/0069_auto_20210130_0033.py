# Generated by Django 2.2 on 2021-01-30 00:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0068_auto_20210112_2332'),
    ]

    operations = [
        migrations.AddField(
            model_name='customuser',
            name='avg_points',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='avg_rank',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='follower_count',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='following_count',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='games_played',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='followers', to='core.CustomUser')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='followings', to='core.CustomUser')),
            ],
            options={
                'db_table': 'followers',
                'unique_together': {('from_user', 'to_user')},
            },
        ),
        migrations.RunSQL("""
        update users
           set avg_rank = t.avg_rank,
               avg_points = t.avg_points,
               games_played = t.games_played
          from (
          select games.user_id,
                 round(avg(match_leaderboard.position)) avg_rank,
                 round(avg(match_leaderboard.score)) avg_points,
                 count(1) games_played
            from match_leaderboard,
                 games
           where match_leaderboard.game_id = games.id
           group by games.user_id
          ) t
         where users.id = t.user_id; 
        """,
                          """""")
    ]
