# Generated by Django 2.2 on 2024-07-17 19:58

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0152_assignedcardpack_card_ids'),
    ]

    operations = [
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('tier', models.IntegerField()),
                ('percentage', models.FloatField(default=0.01)),
            ],
            options={
                'db_table': 'divisions',
            },
        ),
        migrations.CreateModel(
            name='GameWeek',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('start_at', models.DateTimeField()),
                ('end_at', models.DateTimeField()),
                ('scored_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('s', 'New'), ('l', 'Live'), ('f', 'Not_processed'), ('c', 'Concluded')], default='s', max_length=1)),
                ('leaderboards', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.MatchLeaderboard')),
            ],
            options={
                'db_table': 'game_weeks',
            },
        ),
        migrations.CreateModel(
            name='UserGameWeekHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('week_division_position', models.IntegerField(default=0)),
                ('week_division_tier', models.IntegerField(blank=True, null=True)),
                ('week_points', models.IntegerField(default=0)),
                ('week_coins', models.IntegerField(default=0)),
                ('new_division_tier', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('s', 'Safe'), ('p', 'Promoted'), ('d', 'Demoted')], default='s', max_length=1)),
                ('game_week', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.GameWeek')),
                ('new_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='new_divisions', to='core.Division')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.CustomUser')),
                ('week_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Division')),
            ],
            options={
                'db_table': 'user_game_week_histories',
            },
        ),
        migrations.CreateModel(
            name='UserDivision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Division')),
                ('game_week', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.GameWeek')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.CustomUser')),
            ],
            options={
                'db_table': 'user_divisions',
                'unique_together': {('user', 'division', 'game_week')},
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='divisions',
            field=models.ManyToManyField(through='core.UserDivision', to='core.Division'),
        ),
        migrations.AddField(
            model_name='matchleaderboard',
            name='division',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Division'),
        ),
        migrations.AddField(
            model_name='transactions',
            name='week',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.GameWeek'),
        ),
        migrations.CreateModel(
            name='DivisionReward',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('min_position', models.IntegerField(default=1)),
                ('max_position', models.IntegerField(blank=True, null=True)),
                ('amount', models.FloatField()),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Division')),
                ('week', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.GameWeek')),
            ],
            options={
                'db_table': 'division_rewards',
                'unique_together': {('week', 'division', 'min_position', 'max_position')},
            },
        ),
    ]
