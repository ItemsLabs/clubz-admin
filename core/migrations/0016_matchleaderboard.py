# Generated by Django 2.1.7 on 2019-03-25 18:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0015_auto_20190321_2233'),
    ]

    operations = [
        migrations.CreateModel(
            name='MatchLeaderboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(null=True)),
                ('position', models.IntegerField(null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Game')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Match')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.CustomUser')),
            ],
            options={
                'db_table': 'match_leaderboard',
            },
        ),
        migrations.RunSQL(
            """
create or replace function update_match_leaderboard(p_match_id uuid)
  returns void as $$
begin
  update match_leaderboard
     set score = t.score,
         position = t.position
    from (select g.id game_id,
                 g.score,
                 rank() over(order by g.score desc) as position
            from games g
           where g.match_id = p_match_id
         ) t
   where match_leaderboard.game_id = t.game_id;
end;
$$ language plpgsql;
            """,
            """DROP FUNCTION update_match_leaderboard(p_match_id uuid);"""
        ),

        # trigger to insert match_leaderboard record on game insert
        migrations.RunSQL(
            """
CREATE OR REPLACE FUNCTION insert_match_leaderboard_record()
  RETURNS TRIGGER AS $$
BEGIN 
    insert into match_leaderboard(match_id, game_id, user_id, score, position)
    values (NEW.match_id, NEW.id, NEW.user_id, null, null);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
            """,
            """DROP FUNCTION insert_match_leaderboard_record();"""
        ),
        migrations.RunSQL(
            """
CREATE TRIGGER trg_insert_match_leaderboard_record
AFTER INSERT ON games
FOR EACH ROW EXECUTE PROCEDURE insert_match_leaderboard_record();
            """,
            """DROP TRIGGER trg_insert_match_leaderboard_record ON games;"""
        ),

        # insert match_leaderboard for each match
        migrations.RunSQL(
            """
insert into match_leaderboard(match_id, user_id, game_id)
select match_id,
       user_id,
       id
  from games
""", """"""
        ),

        # update match_leaderboard for each match
        migrations.RunSQL(
            """
select t.match_id,
       update_match_leaderboard(t.match_id)
  from (select distinct match_id from games) t
            """,
            """"""
        )
    ]

