# Generated by Django 2.2 on 2021-05-22 14:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0077_customuser_premium'),
    ]

    operations = [
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.TextField(unique=True)),
                ('last_billing_update', models.DateTimeField()),
                ('raw_data', models.TextField()),
                ('expiration_time', models.DateTimeField()),
                ('active', models.BooleanField()),
            ],
            options={
                'db_table': 'subscriptions',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.TextField()),
                ('last_billing_update', models.DateTimeField()),
            ],
            options={
                'db_table': 'subscription_requests',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_billing_update', models.DateTimeField()),
                ('raw_data', models.TextField()),
                ('expiration_time', models.DateTimeField()),
                ('active', models.BooleanField()),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Subscription')),
            ],
            options={
                'db_table': 'subscription_history',
            },
        ),
        migrations.RunSQL(
            """
CREATE OR REPLACE FUNCTION insert_subscription_history()
  RETURNS TRIGGER AS $$
DECLARE
BEGIN 
    insert into subscription_history(
        created_at,
        subscription_id,
        last_billing_update,
        raw_data,
        expiration_time,
        active
    ) values (
        current_timestamp,
        NEW.id,
        OLD.last_billing_update,
        OLD.raw_data,
        OLD.expiration_time,
        OLD.active
    );

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
            """,
            """DROP FUNCTION insert_subscription_history();"""
        ),
        migrations.RunSQL(
            """
CREATE TRIGGER trg_insert_subscription_history
AFTER UPDATE ON subscriptions
FOR EACH ROW EXECUTE PROCEDURE insert_subscription_history();
            """,
            """DROP TRIGGER trg_insert_subscription_history ON subscriptions;"""
        ),
    ]
