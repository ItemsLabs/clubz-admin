"""
Django settings for mobile_api project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import datetime
import json
import os


from opta.websocket import OptaWebSocketClient
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from ortec.api import OrtecAPI
from opta.api import OptaAPI

from revenue_cat.api import RevenueCatAPI

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "65r&%#$ocukd68u^&v+g=u%q%)u5v4#sp70ac-wz@9nnrl$wbz"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'rest_framework',
    'rabbit',
    'soccer_wiki',
    'django_celery_beat',
    'blockchain_web3',
    'csvexport',
    'divisions'
]

MIDDLEWARE = [
    # 'util.middlewares.MetricMiddleware',
    "util.middlewares.HealthCheckMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "mobile_api.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mobile_api.wsgi.application"

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    "default": {
        # If you are using Cloud SQL for MySQL rather than PostgreSQL, set
        # 'ENGINE': 'django.db.backends.mysql' instead of the following.
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("DATABASE_NAME"),
        "USER": os.getenv("DATABASE_USER"),
        "PASSWORD": os.getenv("DATABASE_PASSWORD"),
        "HOST": os.getenv("DATABASE_HOST"),
        "PORT": os.getenv("DATABASE_PORT", "5432"),
        "OPTIONS": {"sslmode": os.getenv("DATABASE_SSLMODE", "disabled")},
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

REST_FRAMEWORK = {
    "EXCEPTION_HANDLER": "core.exceptions.custom_exception_handler",
    "DEFAULT_AUTHENTICATION_CLASSES": ("core.authentication.JWTAuthentication",),
    "DEFAULT_RENDERER_CLASSES": (
        "core.renderers.CustomJSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ),
}

GCE_PROJECT_ID = os.getenv("GCE_PROJECT_ID")
GCE_OPTA_FEED_BUCKET = os.getenv("GCE_OPTA_FEED_BUCKET")
GCE_OPTA_FEED_CREDENTIALS = os.getenv("GCE_OPTA_FEED_CREDENTIALS")
GCE_PLAYER_IMAGES_BUCKET = os.getenv("GCE_PLAYER_IMAGES_BUCKET")
GCE_TEAM_CRESTS_BUCKET = os.getenv("GCE_TEAM_CRESTS_BUCKET")
GCE_USER_AVATAR_BUCKET = os.getenv("GCE_USER_AVATAR_BUCKET")

# 20 mb
DATA_UPLOAD_MAX_MEMORY_SIZE = 20971520
AMQP_MATCH_EVENTS_EXCHANGE = os.getenv("AMQP_MATCH_EVENTS_EXCHANGE")
AMQP_GAMES_EXCHANGE = os.getenv("AMQP_GAMES_EXCHANGE")
AMQP_SYSTEM_EXCHANGE = os.getenv("AMQP_SYSTEM_EXCHANGE")
AMPQ_NOTIFICATIONS_EXCHANGE = os.getenv("AMQP_NOTIFICATIONS_EXCHANGE")
RMQ_FCM_EXCHANGE= os.getenv("RMQ_FCM_EXCHANGE")

FCM_CREDENTIALS = os.getenv("FCM_CREDENTIALS")

# gameplay settings
GAME_DISPLAY_LOW_DELTA = datetime.timedelta(hours=12)
MATCH_DISPLAY_LOW_DELTA = datetime.timedelta(hours=12)
MATCH_DISPLAY_HIGH_DELTA = datetime.timedelta(days=3)
MAX_PICKS = 4
STAR_PLAYERS_TOP = 8
MIN_CASHOUT_AMOUNT = 15
AVG_STAT_GAME_COUNT = 50

# init fcm
# firebase_admin.initialize_app(credentials.Certificate(json.loads(FCM_CREDENTIALS)))

# STATSD_HOST = os.getenv('STATSD_HOST')
# STATSD_PORT = int(os.getenv('STATSD_PORT', 8125))
# STATSD_CLIENT = 'django_statsd.clients.normal'

ORTEC_CLIENT = OrtecAPI(os.getenv("ORTEC_USERNAME"), os.getenv("ORTEC_PASSWORD"))

OPTA_CLIENT = OptaAPI(
    os.getenv("OPTA_OUTLET_AUTH_KEY"),
    os.getenv("OPTA_RT_MODE"),
    os.getenv("OPTA_DATA_FORMAT"),
)
OPTA_WS_CLIENT = OptaWebSocketClient(os.getenv("OPTA_OUTLET_AUTH_KEY"))


REVENUE_CAT_CLIENT = RevenueCatAPI(os.getenv("REVENUE_CAT_API_KEY"))

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.db.DatabaseCache",
        "LOCATION": "fanclash_cache",
    }
}

PREMIUM_SUBSCRIPTION_PRICE = 10.00

DO_SPACE_API_KEY = os.getenv("DO_SPACE_API_KEY")
DO_SPACE_API_SECRET = os.getenv("DO_SPACE_API_SECRET")

AMQP_THROTTLING_ENABLED = os.getenv("AMQP_THROTTLING_ENABLED", True)
AMQP_THROTTLING_THRESHOLD = os.getenv("AMQP_THROTTLING_THRESHOLD", 55)
AMQP_THROTTLING_SCHEDULE_INTERVAL = os.getenv("AMQP_THROTTLING_SCHEDULE_INTERVAL", 60)

OPTA_PROXY = os.getenv("OPTA_PROXY")